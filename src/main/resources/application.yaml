server:
  port: 8091
  remote:
    address: 5.63.154.191

spring:
  application:
    name: MESSAGE-SERVICE
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    platform: postgres
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://5.63.154.191:5432/messages
    username: selectel
    password: selectel
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml

gtw:
  users-service: http://${eureka.instance.hostname}:8088/users

users-service:
  url: http://${server.remote.address}:8085/api/v1
  host: 5.63.154.191
  port: 8085
friends-service:
  url: http://${server.remote.address}:8083/api/v1
  host: 5.63.154.191
  port: 8083

jwt:
  access-token-duration: 43_200_000
  refresh-token-duration: 86_400_000
  token_alg: SignatureAlgorithm.HS256

jpa:
  defer-datasource-initialization: true
  hibernate:
    ddl-auto: none

liquibase:
  enabled: true
  drop-first: false
  default-schema: public

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://5.63.154.191:8087/eureka
  instance:
    hostname: 5.63.154.191

kafka:
  consumer-enabled: true
  bootstrap-servers: 5.63.154.191:9092,5.63.154.191:9093
  properties:
    #      sasl:
    #        jaas:
    #          ru.skillbox.socialnetwork.messages.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka_username:'admin'} password=${kafka_password:'admin-secret'};
    #        mechanism: PLAIN
    security:
      #        protocol: SASL_PLAINTEXT
      protocol: PLAINTEXT
      # Тип, для которого определяем конкретные сериализаторы
      spring.json.value.default.type: kafka.ru.skillbox.socialnetwork.messages.dto.ru.skillbox.socialnetwork.JsonMessage.java
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
  consumer:
    auto-offset-reset: earliest
    group-id: ${spring.application.name}
    # Сериализаторы для всех типов
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.JsonDeserializer
    max-poll-records: 1
    fetch-max-wait: 36000
    enable-auto-commit: false

  producer:
    client-id: ${spring.application.name}
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    # Очередь для исключений
    value-serializer: org.apache.kafka.common.serialization.JsonDeserializer
    retries: 2

  #    jaas:
  #      enabled: true
  listener:
    poll-timeout: 1800000
    concurrency: 1
    # ack-mode: manual_immediate
    # Получение каждой записи должно быть подтверждено
    ack-mode: record
  topics:
    auth: auth-topic
    users: users-topic
    posts: posts-topic
    msg: msg-topic
    notify: notify-topic
    friends: friends-topic
    admin: admin-topic


